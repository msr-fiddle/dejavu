// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state_stream.proto

#ifndef PROTOBUF_INCLUDED_state_5fstream_2eproto
#define PROTOBUF_INCLUDED_state_5fstream_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_state_5fstream_2eproto 

namespace protobuf_state_5fstream_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_state_5fstream_2eproto
namespace dejavu {
class CompleteRequest;
class CompleteRequestDefaultTypeInternal;
extern CompleteRequestDefaultTypeInternal _CompleteRequest_default_instance_;
class CompleteResponse;
class CompleteResponseDefaultTypeInternal;
extern CompleteResponseDefaultTypeInternal _CompleteResponse_default_instance_;
class PushRequest;
class PushRequestDefaultTypeInternal;
extern PushRequestDefaultTypeInternal _PushRequest_default_instance_;
class PushResponse;
class PushResponseDefaultTypeInternal;
extern PushResponseDefaultTypeInternal _PushResponse_default_instance_;
}  // namespace dejavu
namespace google {
namespace protobuf {
template<> ::dejavu::CompleteRequest* Arena::CreateMaybeMessage<::dejavu::CompleteRequest>(Arena*);
template<> ::dejavu::CompleteResponse* Arena::CreateMaybeMessage<::dejavu::CompleteResponse>(Arena*);
template<> ::dejavu::PushRequest* Arena::CreateMaybeMessage<::dejavu::PushRequest>(Arena*);
template<> ::dejavu::PushResponse* Arena::CreateMaybeMessage<::dejavu::PushResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dejavu {

// ===================================================================

class PushRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu.PushRequest) */ {
 public:
  PushRequest();
  virtual ~PushRequest();

  PushRequest(const PushRequest& from);

  inline PushRequest& operator=(const PushRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushRequest(PushRequest&& from) noexcept
    : PushRequest() {
    *this = ::std::move(from);
  }

  inline PushRequest& operator=(PushRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushRequest* internal_default_instance() {
    return reinterpret_cast<const PushRequest*>(
               &_PushRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PushRequest* other);
  friend void swap(PushRequest& a, PushRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushRequest* New() const final {
    return CreateMaybeMessage<PushRequest>(NULL);
  }

  PushRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushRequest& from);
  void MergeFrom(const PushRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu.PushRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_state_5fstream_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PushResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu.PushResponse) */ {
 public:
  PushResponse();
  virtual ~PushResponse();

  PushResponse(const PushResponse& from);

  inline PushResponse& operator=(const PushResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PushResponse(PushResponse&& from) noexcept
    : PushResponse() {
    *this = ::std::move(from);
  }

  inline PushResponse& operator=(PushResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PushResponse* internal_default_instance() {
    return reinterpret_cast<const PushResponse*>(
               &_PushResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PushResponse* other);
  friend void swap(PushResponse& a, PushResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PushResponse* New() const final {
    return CreateMaybeMessage<PushResponse>(NULL);
  }

  PushResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PushResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PushResponse& from);
  void MergeFrom(const PushResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PushResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 slot_id = 1;
  bool has_slot_id() const;
  void clear_slot_id();
  static const int kSlotIdFieldNumber = 1;
  ::google::protobuf::int32 slot_id() const;
  void set_slot_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dejavu.PushResponse)
 private:
  void set_has_slot_id();
  void clear_has_slot_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 slot_id_;
  friend struct ::protobuf_state_5fstream_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu.CompleteRequest) */ {
 public:
  CompleteRequest();
  virtual ~CompleteRequest();

  CompleteRequest(const CompleteRequest& from);

  inline CompleteRequest& operator=(const CompleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompleteRequest(CompleteRequest&& from) noexcept
    : CompleteRequest() {
    *this = ::std::move(from);
  }

  inline CompleteRequest& operator=(CompleteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompleteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompleteRequest* internal_default_instance() {
    return reinterpret_cast<const CompleteRequest*>(
               &_CompleteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CompleteRequest* other);
  friend void swap(CompleteRequest& a, CompleteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompleteRequest* New() const final {
    return CreateMaybeMessage<CompleteRequest>(NULL);
  }

  CompleteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompleteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompleteRequest& from);
  void MergeFrom(const CompleteRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 slot_id = 1;
  bool has_slot_id() const;
  void clear_slot_id();
  static const int kSlotIdFieldNumber = 1;
  ::google::protobuf::int32 slot_id() const;
  void set_slot_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dejavu.CompleteRequest)
 private:
  void set_has_slot_id();
  void clear_has_slot_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 slot_id_;
  friend struct ::protobuf_state_5fstream_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu.CompleteResponse) */ {
 public:
  CompleteResponse();
  virtual ~CompleteResponse();

  CompleteResponse(const CompleteResponse& from);

  inline CompleteResponse& operator=(const CompleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompleteResponse(CompleteResponse&& from) noexcept
    : CompleteResponse() {
    *this = ::std::move(from);
  }

  inline CompleteResponse& operator=(CompleteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CompleteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CompleteResponse* internal_default_instance() {
    return reinterpret_cast<const CompleteResponse*>(
               &_CompleteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CompleteResponse* other);
  friend void swap(CompleteResponse& a, CompleteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompleteResponse* New() const final {
    return CreateMaybeMessage<CompleteResponse>(NULL);
  }

  CompleteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CompleteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CompleteResponse& from);
  void MergeFrom(const CompleteResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu.CompleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_state_5fstream_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PushRequest

// -------------------------------------------------------------------

// PushResponse

// required int32 slot_id = 1;
inline bool PushResponse::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushResponse::set_has_slot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushResponse::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushResponse::clear_slot_id() {
  slot_id_ = 0;
  clear_has_slot_id();
}
inline ::google::protobuf::int32 PushResponse::slot_id() const {
  // @@protoc_insertion_point(field_get:dejavu.PushResponse.slot_id)
  return slot_id_;
}
inline void PushResponse::set_slot_id(::google::protobuf::int32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:dejavu.PushResponse.slot_id)
}

// -------------------------------------------------------------------

// CompleteRequest

// required int32 slot_id = 1;
inline bool CompleteRequest::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CompleteRequest::set_has_slot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CompleteRequest::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CompleteRequest::clear_slot_id() {
  slot_id_ = 0;
  clear_has_slot_id();
}
inline ::google::protobuf::int32 CompleteRequest::slot_id() const {
  // @@protoc_insertion_point(field_get:dejavu.CompleteRequest.slot_id)
  return slot_id_;
}
inline void CompleteRequest::set_slot_id(::google::protobuf::int32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:dejavu.CompleteRequest.slot_id)
}

// -------------------------------------------------------------------

// CompleteResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dejavu

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_state_5fstream_2eproto
