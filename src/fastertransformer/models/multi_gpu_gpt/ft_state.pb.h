// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ft_state.proto

#ifndef PROTOBUF_INCLUDED_ft_5fstate_2eproto
#define PROTOBUF_INCLUDED_ft_5fstate_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ft_5fstate_2eproto 

namespace protobuf_ft_5fstate_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ft_5fstate_2eproto
namespace dejavu_ft {
class CacheRequest;
class CacheRequestDefaultTypeInternal;
extern CacheRequestDefaultTypeInternal _CacheRequest_default_instance_;
class CacheResponse;
class CacheResponseDefaultTypeInternal;
extern CacheResponseDefaultTypeInternal _CacheResponse_default_instance_;
class HeartBeatRequest;
class HeartBeatRequestDefaultTypeInternal;
extern HeartBeatRequestDefaultTypeInternal _HeartBeatRequest_default_instance_;
class HeartBeatResponse;
class HeartBeatResponseDefaultTypeInternal;
extern HeartBeatResponseDefaultTypeInternal _HeartBeatResponse_default_instance_;
class IsReadyRequest;
class IsReadyRequestDefaultTypeInternal;
extern IsReadyRequestDefaultTypeInternal _IsReadyRequest_default_instance_;
class IsReadyResponse;
class IsReadyResponseDefaultTypeInternal;
extern IsReadyResponseDefaultTypeInternal _IsReadyResponse_default_instance_;
class IsRestartRequest;
class IsRestartRequestDefaultTypeInternal;
extern IsRestartRequestDefaultTypeInternal _IsRestartRequest_default_instance_;
class IsRestartResponse;
class IsRestartResponseDefaultTypeInternal;
extern IsRestartResponseDefaultTypeInternal _IsRestartResponse_default_instance_;
class ResetRequest;
class ResetRequestDefaultTypeInternal;
extern ResetRequestDefaultTypeInternal _ResetRequest_default_instance_;
class ResetResponse;
class ResetResponseDefaultTypeInternal;
extern ResetResponseDefaultTypeInternal _ResetResponse_default_instance_;
class StartUpInfoRequest;
class StartUpInfoRequestDefaultTypeInternal;
extern StartUpInfoRequestDefaultTypeInternal _StartUpInfoRequest_default_instance_;
class StartUpInfoResponse;
class StartUpInfoResponseDefaultTypeInternal;
extern StartUpInfoResponseDefaultTypeInternal _StartUpInfoResponse_default_instance_;
class TokenRequest;
class TokenRequestDefaultTypeInternal;
extern TokenRequestDefaultTypeInternal _TokenRequest_default_instance_;
class TokenResponse;
class TokenResponseDefaultTypeInternal;
extern TokenResponseDefaultTypeInternal _TokenResponse_default_instance_;
class UbatchFinishedRequest;
class UbatchFinishedRequestDefaultTypeInternal;
extern UbatchFinishedRequestDefaultTypeInternal _UbatchFinishedRequest_default_instance_;
class UbatchFinishedResponse;
class UbatchFinishedResponseDefaultTypeInternal;
extern UbatchFinishedResponseDefaultTypeInternal _UbatchFinishedResponse_default_instance_;
}  // namespace dejavu_ft
namespace google {
namespace protobuf {
template<> ::dejavu_ft::CacheRequest* Arena::CreateMaybeMessage<::dejavu_ft::CacheRequest>(Arena*);
template<> ::dejavu_ft::CacheResponse* Arena::CreateMaybeMessage<::dejavu_ft::CacheResponse>(Arena*);
template<> ::dejavu_ft::HeartBeatRequest* Arena::CreateMaybeMessage<::dejavu_ft::HeartBeatRequest>(Arena*);
template<> ::dejavu_ft::HeartBeatResponse* Arena::CreateMaybeMessage<::dejavu_ft::HeartBeatResponse>(Arena*);
template<> ::dejavu_ft::IsReadyRequest* Arena::CreateMaybeMessage<::dejavu_ft::IsReadyRequest>(Arena*);
template<> ::dejavu_ft::IsReadyResponse* Arena::CreateMaybeMessage<::dejavu_ft::IsReadyResponse>(Arena*);
template<> ::dejavu_ft::IsRestartRequest* Arena::CreateMaybeMessage<::dejavu_ft::IsRestartRequest>(Arena*);
template<> ::dejavu_ft::IsRestartResponse* Arena::CreateMaybeMessage<::dejavu_ft::IsRestartResponse>(Arena*);
template<> ::dejavu_ft::ResetRequest* Arena::CreateMaybeMessage<::dejavu_ft::ResetRequest>(Arena*);
template<> ::dejavu_ft::ResetResponse* Arena::CreateMaybeMessage<::dejavu_ft::ResetResponse>(Arena*);
template<> ::dejavu_ft::StartUpInfoRequest* Arena::CreateMaybeMessage<::dejavu_ft::StartUpInfoRequest>(Arena*);
template<> ::dejavu_ft::StartUpInfoResponse* Arena::CreateMaybeMessage<::dejavu_ft::StartUpInfoResponse>(Arena*);
template<> ::dejavu_ft::TokenRequest* Arena::CreateMaybeMessage<::dejavu_ft::TokenRequest>(Arena*);
template<> ::dejavu_ft::TokenResponse* Arena::CreateMaybeMessage<::dejavu_ft::TokenResponse>(Arena*);
template<> ::dejavu_ft::UbatchFinishedRequest* Arena::CreateMaybeMessage<::dejavu_ft::UbatchFinishedRequest>(Arena*);
template<> ::dejavu_ft::UbatchFinishedResponse* Arena::CreateMaybeMessage<::dejavu_ft::UbatchFinishedResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dejavu_ft {

// ===================================================================

class ResetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.ResetRequest) */ {
 public:
  ResetRequest();
  virtual ~ResetRequest();

  ResetRequest(const ResetRequest& from);

  inline ResetRequest& operator=(const ResetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetRequest(ResetRequest&& from) noexcept
    : ResetRequest() {
    *this = ::std::move(from);
  }

  inline ResetRequest& operator=(ResetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetRequest* internal_default_instance() {
    return reinterpret_cast<const ResetRequest*>(
               &_ResetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ResetRequest* other);
  friend void swap(ResetRequest& a, ResetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetRequest* New() const final {
    return CreateMaybeMessage<ResetRequest>(NULL);
  }

  ResetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResetRequest& from);
  void MergeFrom(const ResetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.ResetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.ResetResponse) */ {
 public:
  ResetResponse();
  virtual ~ResetResponse();

  ResetResponse(const ResetResponse& from);

  inline ResetResponse& operator=(const ResetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetResponse(ResetResponse&& from) noexcept
    : ResetResponse() {
    *this = ::std::move(from);
  }

  inline ResetResponse& operator=(ResetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResetResponse* internal_default_instance() {
    return reinterpret_cast<const ResetResponse*>(
               &_ResetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ResetResponse* other);
  friend void swap(ResetResponse& a, ResetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetResponse* New() const final {
    return CreateMaybeMessage<ResetResponse>(NULL);
  }

  ResetResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResetResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResetResponse& from);
  void MergeFrom(const ResetResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.ResetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.HeartBeatRequest) */ {
 public:
  HeartBeatRequest();
  virtual ~HeartBeatRequest();

  HeartBeatRequest(const HeartBeatRequest& from);

  inline HeartBeatRequest& operator=(const HeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeatRequest(HeartBeatRequest&& from) noexcept
    : HeartBeatRequest() {
    *this = ::std::move(from);
  }

  inline HeartBeatRequest& operator=(HeartBeatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeatRequest* internal_default_instance() {
    return reinterpret_cast<const HeartBeatRequest*>(
               &_HeartBeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HeartBeatRequest* other);
  friend void swap(HeartBeatRequest& a, HeartBeatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeatRequest* New() const final {
    return CreateMaybeMessage<HeartBeatRequest>(NULL);
  }

  HeartBeatRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartBeatRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartBeatRequest& from);
  void MergeFrom(const HeartBeatRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dejavu_ft.HeartBeatRequest)
 private:
  void set_has_rank();
  void clear_has_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 rank_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.HeartBeatResponse) */ {
 public:
  HeartBeatResponse();
  virtual ~HeartBeatResponse();

  HeartBeatResponse(const HeartBeatResponse& from);

  inline HeartBeatResponse& operator=(const HeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartBeatResponse(HeartBeatResponse&& from) noexcept
    : HeartBeatResponse() {
    *this = ::std::move(from);
  }

  inline HeartBeatResponse& operator=(HeartBeatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartBeatResponse* internal_default_instance() {
    return reinterpret_cast<const HeartBeatResponse*>(
               &_HeartBeatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(HeartBeatResponse* other);
  friend void swap(HeartBeatResponse& a, HeartBeatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartBeatResponse* New() const final {
    return CreateMaybeMessage<HeartBeatResponse>(NULL);
  }

  HeartBeatResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartBeatResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartBeatResponse& from);
  void MergeFrom(const HeartBeatResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool reset = 1;
  bool has_reset() const;
  void clear_reset();
  static const int kResetFieldNumber = 1;
  bool reset() const;
  void set_reset(bool value);

  // @@protoc_insertion_point(class_scope:dejavu_ft.HeartBeatResponse)
 private:
  void set_has_reset();
  void clear_has_reset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool reset_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartUpInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.StartUpInfoRequest) */ {
 public:
  StartUpInfoRequest();
  virtual ~StartUpInfoRequest();

  StartUpInfoRequest(const StartUpInfoRequest& from);

  inline StartUpInfoRequest& operator=(const StartUpInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartUpInfoRequest(StartUpInfoRequest&& from) noexcept
    : StartUpInfoRequest() {
    *this = ::std::move(from);
  }

  inline StartUpInfoRequest& operator=(StartUpInfoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartUpInfoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartUpInfoRequest* internal_default_instance() {
    return reinterpret_cast<const StartUpInfoRequest*>(
               &_StartUpInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(StartUpInfoRequest* other);
  friend void swap(StartUpInfoRequest& a, StartUpInfoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartUpInfoRequest* New() const final {
    return CreateMaybeMessage<StartUpInfoRequest>(NULL);
  }

  StartUpInfoRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StartUpInfoRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StartUpInfoRequest& from);
  void MergeFrom(const StartUpInfoRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartUpInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dejavu_ft.StartUpInfoRequest)
 private:
  void set_has_rank();
  void clear_has_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 rank_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartUpInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.StartUpInfoResponse) */ {
 public:
  StartUpInfoResponse();
  virtual ~StartUpInfoResponse();

  StartUpInfoResponse(const StartUpInfoResponse& from);

  inline StartUpInfoResponse& operator=(const StartUpInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartUpInfoResponse(StartUpInfoResponse&& from) noexcept
    : StartUpInfoResponse() {
    *this = ::std::move(from);
  }

  inline StartUpInfoResponse& operator=(StartUpInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartUpInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartUpInfoResponse* internal_default_instance() {
    return reinterpret_cast<const StartUpInfoResponse*>(
               &_StartUpInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(StartUpInfoResponse* other);
  friend void swap(StartUpInfoResponse& a, StartUpInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartUpInfoResponse* New() const final {
    return CreateMaybeMessage<StartUpInfoResponse>(NULL);
  }

  StartUpInfoResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StartUpInfoResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StartUpInfoResponse& from);
  void MergeFrom(const StartUpInfoResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartUpInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ubatch_global_ids = 4;
  int ubatch_global_ids_size() const;
  void clear_ubatch_global_ids();
  static const int kUbatchGlobalIdsFieldNumber = 4;
  ::google::protobuf::int32 ubatch_global_ids(int index) const;
  void set_ubatch_global_ids(int index, ::google::protobuf::int32 value);
  void add_ubatch_global_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ubatch_global_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ubatch_global_ids();

  // repeated int32 ubatch_steps = 5;
  int ubatch_steps_size() const;
  void clear_ubatch_steps();
  static const int kUbatchStepsFieldNumber = 5;
  ::google::protobuf::int32 ubatch_steps(int index) const;
  void set_ubatch_steps(int index, ::google::protobuf::int32 value);
  void add_ubatch_steps(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ubatch_steps() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ubatch_steps();

  // repeated int32 prompts_seen = 6;
  int prompts_seen_size() const;
  void clear_prompts_seen();
  static const int kPromptsSeenFieldNumber = 6;
  ::google::protobuf::int32 prompts_seen(int index) const;
  void set_prompts_seen(int index, ::google::protobuf::int32 value);
  void add_prompts_seen(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      prompts_seen() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_prompts_seen();

  // required bool has_failed = 1;
  bool has_has_failed() const;
  void clear_has_failed();
  static const int kHasFailedFieldNumber = 1;
  bool has_failed() const;
  void set_has_failed(bool value);

  // required bool stream_cache_next = 2;
  bool has_stream_cache_next() const;
  void clear_stream_cache_next();
  static const int kStreamCacheNextFieldNumber = 2;
  bool stream_cache_next() const;
  void set_stream_cache_next(bool value);

  // required bool stream_cache_prev = 3;
  bool has_stream_cache_prev() const;
  void clear_stream_cache_prev();
  static const int kStreamCachePrevFieldNumber = 3;
  bool stream_cache_prev() const;
  void set_stream_cache_prev(bool value);

  // @@protoc_insertion_point(class_scope:dejavu_ft.StartUpInfoResponse)
 private:
  void set_has_has_failed();
  void clear_has_has_failed();
  void set_has_stream_cache_next();
  void clear_has_stream_cache_next();
  void set_has_stream_cache_prev();
  void clear_has_stream_cache_prev();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ubatch_global_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ubatch_steps_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > prompts_seen_;
  bool has_failed_;
  bool stream_cache_next_;
  bool stream_cache_prev_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CacheRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.CacheRequest) */ {
 public:
  CacheRequest();
  virtual ~CacheRequest();

  CacheRequest(const CacheRequest& from);

  inline CacheRequest& operator=(const CacheRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CacheRequest(CacheRequest&& from) noexcept
    : CacheRequest() {
    *this = ::std::move(from);
  }

  inline CacheRequest& operator=(CacheRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CacheRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CacheRequest* internal_default_instance() {
    return reinterpret_cast<const CacheRequest*>(
               &_CacheRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CacheRequest* other);
  friend void swap(CacheRequest& a, CacheRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CacheRequest* New() const final {
    return CreateMaybeMessage<CacheRequest>(NULL);
  }

  CacheRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CacheRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CacheRequest& from);
  void MergeFrom(const CacheRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CacheRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // required int32 ubatch_id = 2;
  bool has_ubatch_id() const;
  void clear_ubatch_id();
  static const int kUbatchIdFieldNumber = 2;
  ::google::protobuf::int32 ubatch_id() const;
  void set_ubatch_id(::google::protobuf::int32 value);

  // required int32 step = 3;
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 3;
  ::google::protobuf::int32 step() const;
  void set_step(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dejavu_ft.CacheRequest)
 private:
  void set_has_rank();
  void clear_has_rank();
  void set_has_ubatch_id();
  void clear_has_ubatch_id();
  void set_has_step();
  void clear_has_step();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 ubatch_id_;
  ::google::protobuf::int32 step_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CacheResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.CacheResponse) */ {
 public:
  CacheResponse();
  virtual ~CacheResponse();

  CacheResponse(const CacheResponse& from);

  inline CacheResponse& operator=(const CacheResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CacheResponse(CacheResponse&& from) noexcept
    : CacheResponse() {
    *this = ::std::move(from);
  }

  inline CacheResponse& operator=(CacheResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CacheResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CacheResponse* internal_default_instance() {
    return reinterpret_cast<const CacheResponse*>(
               &_CacheResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CacheResponse* other);
  friend void swap(CacheResponse& a, CacheResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CacheResponse* New() const final {
    return CreateMaybeMessage<CacheResponse>(NULL);
  }

  CacheResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CacheResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CacheResponse& from);
  void MergeFrom(const CacheResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CacheResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.CacheResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TokenRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.TokenRequest) */ {
 public:
  TokenRequest();
  virtual ~TokenRequest();

  TokenRequest(const TokenRequest& from);

  inline TokenRequest& operator=(const TokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TokenRequest(TokenRequest&& from) noexcept
    : TokenRequest() {
    *this = ::std::move(from);
  }

  inline TokenRequest& operator=(TokenRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TokenRequest* internal_default_instance() {
    return reinterpret_cast<const TokenRequest*>(
               &_TokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(TokenRequest* other);
  friend void swap(TokenRequest& a, TokenRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TokenRequest* New() const final {
    return CreateMaybeMessage<TokenRequest>(NULL);
  }

  TokenRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TokenRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TokenRequest& from);
  void MergeFrom(const TokenRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TokenRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 tokens = 3;
  int tokens_size() const;
  void clear_tokens();
  static const int kTokensFieldNumber = 3;
  ::google::protobuf::int32 tokens(int index) const;
  void set_tokens(int index, ::google::protobuf::int32 value);
  void add_tokens(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tokens() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tokens();

  // required int32 ubatch_id = 1;
  bool has_ubatch_id() const;
  void clear_ubatch_id();
  static const int kUbatchIdFieldNumber = 1;
  ::google::protobuf::int32 ubatch_id() const;
  void set_ubatch_id(::google::protobuf::int32 value);

  // required int32 pp_id = 2;
  bool has_pp_id() const;
  void clear_pp_id();
  static const int kPpIdFieldNumber = 2;
  ::google::protobuf::int32 pp_id() const;
  void set_pp_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dejavu_ft.TokenRequest)
 private:
  void set_has_ubatch_id();
  void clear_has_ubatch_id();
  void set_has_pp_id();
  void clear_has_pp_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tokens_;
  ::google::protobuf::int32 ubatch_id_;
  ::google::protobuf::int32 pp_id_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TokenResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.TokenResponse) */ {
 public:
  TokenResponse();
  virtual ~TokenResponse();

  TokenResponse(const TokenResponse& from);

  inline TokenResponse& operator=(const TokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TokenResponse(TokenResponse&& from) noexcept
    : TokenResponse() {
    *this = ::std::move(from);
  }

  inline TokenResponse& operator=(TokenResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TokenResponse* internal_default_instance() {
    return reinterpret_cast<const TokenResponse*>(
               &_TokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(TokenResponse* other);
  friend void swap(TokenResponse& a, TokenResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TokenResponse* New() const final {
    return CreateMaybeMessage<TokenResponse>(NULL);
  }

  TokenResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TokenResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TokenResponse& from);
  void MergeFrom(const TokenResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TokenResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.TokenResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UbatchFinishedRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.UbatchFinishedRequest) */ {
 public:
  UbatchFinishedRequest();
  virtual ~UbatchFinishedRequest();

  UbatchFinishedRequest(const UbatchFinishedRequest& from);

  inline UbatchFinishedRequest& operator=(const UbatchFinishedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UbatchFinishedRequest(UbatchFinishedRequest&& from) noexcept
    : UbatchFinishedRequest() {
    *this = ::std::move(from);
  }

  inline UbatchFinishedRequest& operator=(UbatchFinishedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UbatchFinishedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UbatchFinishedRequest* internal_default_instance() {
    return reinterpret_cast<const UbatchFinishedRequest*>(
               &_UbatchFinishedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(UbatchFinishedRequest* other);
  friend void swap(UbatchFinishedRequest& a, UbatchFinishedRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UbatchFinishedRequest* New() const final {
    return CreateMaybeMessage<UbatchFinishedRequest>(NULL);
  }

  UbatchFinishedRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UbatchFinishedRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UbatchFinishedRequest& from);
  void MergeFrom(const UbatchFinishedRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UbatchFinishedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ubatch_id = 2;
  int ubatch_id_size() const;
  void clear_ubatch_id();
  static const int kUbatchIdFieldNumber = 2;
  ::google::protobuf::int32 ubatch_id(int index) const;
  void set_ubatch_id(int index, ::google::protobuf::int32 value);
  void add_ubatch_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ubatch_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ubatch_id();

  // repeated int32 pp_id = 3;
  int pp_id_size() const;
  void clear_pp_id();
  static const int kPpIdFieldNumber = 3;
  ::google::protobuf::int32 pp_id(int index) const;
  void set_pp_id(int index, ::google::protobuf::int32 value);
  void add_pp_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pp_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pp_id();

  // required int32 rank = 1;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dejavu_ft.UbatchFinishedRequest)
 private:
  void set_has_rank();
  void clear_has_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ubatch_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pp_id_;
  ::google::protobuf::int32 rank_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UbatchFinishedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.UbatchFinishedResponse) */ {
 public:
  UbatchFinishedResponse();
  virtual ~UbatchFinishedResponse();

  UbatchFinishedResponse(const UbatchFinishedResponse& from);

  inline UbatchFinishedResponse& operator=(const UbatchFinishedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UbatchFinishedResponse(UbatchFinishedResponse&& from) noexcept
    : UbatchFinishedResponse() {
    *this = ::std::move(from);
  }

  inline UbatchFinishedResponse& operator=(UbatchFinishedResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UbatchFinishedResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UbatchFinishedResponse* internal_default_instance() {
    return reinterpret_cast<const UbatchFinishedResponse*>(
               &_UbatchFinishedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(UbatchFinishedResponse* other);
  friend void swap(UbatchFinishedResponse& a, UbatchFinishedResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UbatchFinishedResponse* New() const final {
    return CreateMaybeMessage<UbatchFinishedResponse>(NULL);
  }

  UbatchFinishedResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UbatchFinishedResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UbatchFinishedResponse& from);
  void MergeFrom(const UbatchFinishedResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UbatchFinishedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.UbatchFinishedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsReadyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.IsReadyRequest) */ {
 public:
  IsReadyRequest();
  virtual ~IsReadyRequest();

  IsReadyRequest(const IsReadyRequest& from);

  inline IsReadyRequest& operator=(const IsReadyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IsReadyRequest(IsReadyRequest&& from) noexcept
    : IsReadyRequest() {
    *this = ::std::move(from);
  }

  inline IsReadyRequest& operator=(IsReadyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsReadyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IsReadyRequest* internal_default_instance() {
    return reinterpret_cast<const IsReadyRequest*>(
               &_IsReadyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(IsReadyRequest* other);
  friend void swap(IsReadyRequest& a, IsReadyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IsReadyRequest* New() const final {
    return CreateMaybeMessage<IsReadyRequest>(NULL);
  }

  IsReadyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IsReadyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IsReadyRequest& from);
  void MergeFrom(const IsReadyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IsReadyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dejavu_ft.IsReadyRequest)
 private:
  void set_has_rank();
  void clear_has_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 rank_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsReadyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.IsReadyResponse) */ {
 public:
  IsReadyResponse();
  virtual ~IsReadyResponse();

  IsReadyResponse(const IsReadyResponse& from);

  inline IsReadyResponse& operator=(const IsReadyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IsReadyResponse(IsReadyResponse&& from) noexcept
    : IsReadyResponse() {
    *this = ::std::move(from);
  }

  inline IsReadyResponse& operator=(IsReadyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsReadyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IsReadyResponse* internal_default_instance() {
    return reinterpret_cast<const IsReadyResponse*>(
               &_IsReadyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(IsReadyResponse* other);
  friend void swap(IsReadyResponse& a, IsReadyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IsReadyResponse* New() const final {
    return CreateMaybeMessage<IsReadyResponse>(NULL);
  }

  IsReadyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IsReadyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IsReadyResponse& from);
  void MergeFrom(const IsReadyResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IsReadyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.IsReadyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsRestartRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.IsRestartRequest) */ {
 public:
  IsRestartRequest();
  virtual ~IsRestartRequest();

  IsRestartRequest(const IsRestartRequest& from);

  inline IsRestartRequest& operator=(const IsRestartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IsRestartRequest(IsRestartRequest&& from) noexcept
    : IsRestartRequest() {
    *this = ::std::move(from);
  }

  inline IsRestartRequest& operator=(IsRestartRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsRestartRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IsRestartRequest* internal_default_instance() {
    return reinterpret_cast<const IsRestartRequest*>(
               &_IsRestartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(IsRestartRequest* other);
  friend void swap(IsRestartRequest& a, IsRestartRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IsRestartRequest* New() const final {
    return CreateMaybeMessage<IsRestartRequest>(NULL);
  }

  IsRestartRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IsRestartRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IsRestartRequest& from);
  void MergeFrom(const IsRestartRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IsRestartRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dejavu_ft.IsRestartRequest)
 private:
  void set_has_rank();
  void clear_has_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 rank_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsRestartResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.IsRestartResponse) */ {
 public:
  IsRestartResponse();
  virtual ~IsRestartResponse();

  IsRestartResponse(const IsRestartResponse& from);

  inline IsRestartResponse& operator=(const IsRestartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IsRestartResponse(IsRestartResponse&& from) noexcept
    : IsRestartResponse() {
    *this = ::std::move(from);
  }

  inline IsRestartResponse& operator=(IsRestartResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsRestartResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IsRestartResponse* internal_default_instance() {
    return reinterpret_cast<const IsRestartResponse*>(
               &_IsRestartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(IsRestartResponse* other);
  friend void swap(IsRestartResponse& a, IsRestartResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IsRestartResponse* New() const final {
    return CreateMaybeMessage<IsRestartResponse>(NULL);
  }

  IsRestartResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IsRestartResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IsRestartResponse& from);
  void MergeFrom(const IsRestartResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IsRestartResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.IsRestartResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ft_5fstate_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResetRequest

// -------------------------------------------------------------------

// ResetResponse

// -------------------------------------------------------------------

// HeartBeatRequest

// required int32 rank = 1;
inline bool HeartBeatRequest::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatRequest::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatRequest::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatRequest::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 HeartBeatRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.HeartBeatRequest.rank)
  return rank_;
}
inline void HeartBeatRequest::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.HeartBeatRequest.rank)
}

// -------------------------------------------------------------------

// HeartBeatResponse

// required bool reset = 1;
inline bool HeartBeatResponse::has_reset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatResponse::set_has_reset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatResponse::clear_has_reset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatResponse::clear_reset() {
  reset_ = false;
  clear_has_reset();
}
inline bool HeartBeatResponse::reset() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.HeartBeatResponse.reset)
  return reset_;
}
inline void HeartBeatResponse::set_reset(bool value) {
  set_has_reset();
  reset_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.HeartBeatResponse.reset)
}

// -------------------------------------------------------------------

// StartUpInfoRequest

// required int32 rank = 1;
inline bool StartUpInfoRequest::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartUpInfoRequest::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartUpInfoRequest::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartUpInfoRequest::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 StartUpInfoRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoRequest.rank)
  return rank_;
}
inline void StartUpInfoRequest::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoRequest.rank)
}

// -------------------------------------------------------------------

// StartUpInfoResponse

// required bool has_failed = 1;
inline bool StartUpInfoResponse::has_has_failed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartUpInfoResponse::set_has_has_failed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartUpInfoResponse::clear_has_has_failed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartUpInfoResponse::clear_has_failed() {
  has_failed_ = false;
  clear_has_has_failed();
}
inline bool StartUpInfoResponse::has_failed() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.has_failed)
  return has_failed_;
}
inline void StartUpInfoResponse::set_has_failed(bool value) {
  set_has_has_failed();
  has_failed_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.has_failed)
}

// required bool stream_cache_next = 2;
inline bool StartUpInfoResponse::has_stream_cache_next() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartUpInfoResponse::set_has_stream_cache_next() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartUpInfoResponse::clear_has_stream_cache_next() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartUpInfoResponse::clear_stream_cache_next() {
  stream_cache_next_ = false;
  clear_has_stream_cache_next();
}
inline bool StartUpInfoResponse::stream_cache_next() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.stream_cache_next)
  return stream_cache_next_;
}
inline void StartUpInfoResponse::set_stream_cache_next(bool value) {
  set_has_stream_cache_next();
  stream_cache_next_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.stream_cache_next)
}

// required bool stream_cache_prev = 3;
inline bool StartUpInfoResponse::has_stream_cache_prev() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartUpInfoResponse::set_has_stream_cache_prev() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartUpInfoResponse::clear_has_stream_cache_prev() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartUpInfoResponse::clear_stream_cache_prev() {
  stream_cache_prev_ = false;
  clear_has_stream_cache_prev();
}
inline bool StartUpInfoResponse::stream_cache_prev() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.stream_cache_prev)
  return stream_cache_prev_;
}
inline void StartUpInfoResponse::set_stream_cache_prev(bool value) {
  set_has_stream_cache_prev();
  stream_cache_prev_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.stream_cache_prev)
}

// repeated int32 ubatch_global_ids = 4;
inline int StartUpInfoResponse::ubatch_global_ids_size() const {
  return ubatch_global_ids_.size();
}
inline void StartUpInfoResponse::clear_ubatch_global_ids() {
  ubatch_global_ids_.Clear();
}
inline ::google::protobuf::int32 StartUpInfoResponse::ubatch_global_ids(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
  return ubatch_global_ids_.Get(index);
}
inline void StartUpInfoResponse::set_ubatch_global_ids(int index, ::google::protobuf::int32 value) {
  ubatch_global_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
}
inline void StartUpInfoResponse::add_ubatch_global_ids(::google::protobuf::int32 value) {
  ubatch_global_ids_.Add(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StartUpInfoResponse::ubatch_global_ids() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
  return ubatch_global_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StartUpInfoResponse::mutable_ubatch_global_ids() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
  return &ubatch_global_ids_;
}

// repeated int32 ubatch_steps = 5;
inline int StartUpInfoResponse::ubatch_steps_size() const {
  return ubatch_steps_.size();
}
inline void StartUpInfoResponse::clear_ubatch_steps() {
  ubatch_steps_.Clear();
}
inline ::google::protobuf::int32 StartUpInfoResponse::ubatch_steps(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.ubatch_steps)
  return ubatch_steps_.Get(index);
}
inline void StartUpInfoResponse::set_ubatch_steps(int index, ::google::protobuf::int32 value) {
  ubatch_steps_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.ubatch_steps)
}
inline void StartUpInfoResponse::add_ubatch_steps(::google::protobuf::int32 value) {
  ubatch_steps_.Add(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.StartUpInfoResponse.ubatch_steps)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StartUpInfoResponse::ubatch_steps() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.StartUpInfoResponse.ubatch_steps)
  return ubatch_steps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StartUpInfoResponse::mutable_ubatch_steps() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.StartUpInfoResponse.ubatch_steps)
  return &ubatch_steps_;
}

// repeated int32 prompts_seen = 6;
inline int StartUpInfoResponse::prompts_seen_size() const {
  return prompts_seen_.size();
}
inline void StartUpInfoResponse::clear_prompts_seen() {
  prompts_seen_.Clear();
}
inline ::google::protobuf::int32 StartUpInfoResponse::prompts_seen(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.prompts_seen)
  return prompts_seen_.Get(index);
}
inline void StartUpInfoResponse::set_prompts_seen(int index, ::google::protobuf::int32 value) {
  prompts_seen_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.prompts_seen)
}
inline void StartUpInfoResponse::add_prompts_seen(::google::protobuf::int32 value) {
  prompts_seen_.Add(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.StartUpInfoResponse.prompts_seen)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
StartUpInfoResponse::prompts_seen() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.StartUpInfoResponse.prompts_seen)
  return prompts_seen_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
StartUpInfoResponse::mutable_prompts_seen() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.StartUpInfoResponse.prompts_seen)
  return &prompts_seen_;
}

// -------------------------------------------------------------------

// CacheRequest

// required int32 rank = 1;
inline bool CacheRequest::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CacheRequest::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CacheRequest::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CacheRequest::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 CacheRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.CacheRequest.rank)
  return rank_;
}
inline void CacheRequest::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.CacheRequest.rank)
}

// required int32 ubatch_id = 2;
inline bool CacheRequest::has_ubatch_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CacheRequest::set_has_ubatch_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CacheRequest::clear_has_ubatch_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CacheRequest::clear_ubatch_id() {
  ubatch_id_ = 0;
  clear_has_ubatch_id();
}
inline ::google::protobuf::int32 CacheRequest::ubatch_id() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.CacheRequest.ubatch_id)
  return ubatch_id_;
}
inline void CacheRequest::set_ubatch_id(::google::protobuf::int32 value) {
  set_has_ubatch_id();
  ubatch_id_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.CacheRequest.ubatch_id)
}

// required int32 step = 3;
inline bool CacheRequest::has_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CacheRequest::set_has_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CacheRequest::clear_has_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CacheRequest::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 CacheRequest::step() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.CacheRequest.step)
  return step_;
}
inline void CacheRequest::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.CacheRequest.step)
}

// -------------------------------------------------------------------

// CacheResponse

// -------------------------------------------------------------------

// TokenRequest

// required int32 ubatch_id = 1;
inline bool TokenRequest::has_ubatch_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TokenRequest::set_has_ubatch_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TokenRequest::clear_has_ubatch_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TokenRequest::clear_ubatch_id() {
  ubatch_id_ = 0;
  clear_has_ubatch_id();
}
inline ::google::protobuf::int32 TokenRequest::ubatch_id() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.TokenRequest.ubatch_id)
  return ubatch_id_;
}
inline void TokenRequest::set_ubatch_id(::google::protobuf::int32 value) {
  set_has_ubatch_id();
  ubatch_id_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.TokenRequest.ubatch_id)
}

// required int32 pp_id = 2;
inline bool TokenRequest::has_pp_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TokenRequest::set_has_pp_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TokenRequest::clear_has_pp_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TokenRequest::clear_pp_id() {
  pp_id_ = 0;
  clear_has_pp_id();
}
inline ::google::protobuf::int32 TokenRequest::pp_id() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.TokenRequest.pp_id)
  return pp_id_;
}
inline void TokenRequest::set_pp_id(::google::protobuf::int32 value) {
  set_has_pp_id();
  pp_id_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.TokenRequest.pp_id)
}

// repeated int32 tokens = 3;
inline int TokenRequest::tokens_size() const {
  return tokens_.size();
}
inline void TokenRequest::clear_tokens() {
  tokens_.Clear();
}
inline ::google::protobuf::int32 TokenRequest::tokens(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.TokenRequest.tokens)
  return tokens_.Get(index);
}
inline void TokenRequest::set_tokens(int index, ::google::protobuf::int32 value) {
  tokens_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.TokenRequest.tokens)
}
inline void TokenRequest::add_tokens(::google::protobuf::int32 value) {
  tokens_.Add(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.TokenRequest.tokens)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TokenRequest::tokens() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.TokenRequest.tokens)
  return tokens_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TokenRequest::mutable_tokens() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.TokenRequest.tokens)
  return &tokens_;
}

// -------------------------------------------------------------------

// TokenResponse

// -------------------------------------------------------------------

// UbatchFinishedRequest

// required int32 rank = 1;
inline bool UbatchFinishedRequest::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UbatchFinishedRequest::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UbatchFinishedRequest::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UbatchFinishedRequest::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 UbatchFinishedRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.UbatchFinishedRequest.rank)
  return rank_;
}
inline void UbatchFinishedRequest::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.UbatchFinishedRequest.rank)
}

// repeated int32 ubatch_id = 2;
inline int UbatchFinishedRequest::ubatch_id_size() const {
  return ubatch_id_.size();
}
inline void UbatchFinishedRequest::clear_ubatch_id() {
  ubatch_id_.Clear();
}
inline ::google::protobuf::int32 UbatchFinishedRequest::ubatch_id(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.UbatchFinishedRequest.ubatch_id)
  return ubatch_id_.Get(index);
}
inline void UbatchFinishedRequest::set_ubatch_id(int index, ::google::protobuf::int32 value) {
  ubatch_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.UbatchFinishedRequest.ubatch_id)
}
inline void UbatchFinishedRequest::add_ubatch_id(::google::protobuf::int32 value) {
  ubatch_id_.Add(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.UbatchFinishedRequest.ubatch_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UbatchFinishedRequest::ubatch_id() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.UbatchFinishedRequest.ubatch_id)
  return ubatch_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UbatchFinishedRequest::mutable_ubatch_id() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.UbatchFinishedRequest.ubatch_id)
  return &ubatch_id_;
}

// repeated int32 pp_id = 3;
inline int UbatchFinishedRequest::pp_id_size() const {
  return pp_id_.size();
}
inline void UbatchFinishedRequest::clear_pp_id() {
  pp_id_.Clear();
}
inline ::google::protobuf::int32 UbatchFinishedRequest::pp_id(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.UbatchFinishedRequest.pp_id)
  return pp_id_.Get(index);
}
inline void UbatchFinishedRequest::set_pp_id(int index, ::google::protobuf::int32 value) {
  pp_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.UbatchFinishedRequest.pp_id)
}
inline void UbatchFinishedRequest::add_pp_id(::google::protobuf::int32 value) {
  pp_id_.Add(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.UbatchFinishedRequest.pp_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UbatchFinishedRequest::pp_id() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.UbatchFinishedRequest.pp_id)
  return pp_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UbatchFinishedRequest::mutable_pp_id() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.UbatchFinishedRequest.pp_id)
  return &pp_id_;
}

// -------------------------------------------------------------------

// UbatchFinishedResponse

// -------------------------------------------------------------------

// IsReadyRequest

// required int32 rank = 1;
inline bool IsReadyRequest::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsReadyRequest::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsReadyRequest::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsReadyRequest::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 IsReadyRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.IsReadyRequest.rank)
  return rank_;
}
inline void IsReadyRequest::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.IsReadyRequest.rank)
}

// -------------------------------------------------------------------

// IsReadyResponse

// -------------------------------------------------------------------

// IsRestartRequest

// required int32 rank = 1;
inline bool IsRestartRequest::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsRestartRequest::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsRestartRequest::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsRestartRequest::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 IsRestartRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.IsRestartRequest.rank)
  return rank_;
}
inline void IsRestartRequest::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:dejavu_ft.IsRestartRequest.rank)
}

// -------------------------------------------------------------------

// IsRestartResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dejavu_ft

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ft_5fstate_2eproto
